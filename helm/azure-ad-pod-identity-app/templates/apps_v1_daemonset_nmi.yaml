apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: nmi
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ template "aad-pod-identity.name" . }}'
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    application.giantswarm.io/team: phoenix
    component: nmi
    helm.sh/chart: '{{ .Chart.Name }}'
    k8s-app: aad-pod-id
    tier: node
  name: nmi
  namespace: '{{ .Release.Namespace }}'
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: nmi
      component: nmi
      tier: node
  template:
    metadata:
      labels:
        app.kubernetes.io/component: nmi
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/name: '{{ template "aad-pod-identity.name" . }}'
        application.giantswarm.io/team: phoenix
        component: nmi
        tier: node
    spec:
      containers:
      - args:
        - --node=$(NODE_NAME)
        - --http-probe-port=8085
        - --enableScaleFeatures=true
        - --metadata-header-required=true
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: '{{ .Values.image.registry }}/{{ .Values.nmi.image.name }}:{{ .Values.nmi.image.tag}}'
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8085
          initialDelaySeconds: 10
          periodSeconds: 5
        name: nmi
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          capabilities:
            add:
            - DAC_READ_SEARCH
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
          runAsUser: 0
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: iptableslock
        - mountPath: /etc/default/kubelet
          name: kubelet-config
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: aad-pod-id-nmi-service-account
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: iptableslock
      - hostPath:
          path: /etc/default/kubelet
          type: FileOrCreate
        name: kubelet-config
  updateStrategy:
    type: RollingUpdate
